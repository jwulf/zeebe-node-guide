<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Create (Start) a Workflow Instance on Zeebe Node.js Client Guide</title>
    <link>http://example.org/createwf/</link>
    <description>Recent content in Create (Start) a Workflow Instance on Zeebe Node.js Client Guide</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Oct 2019 16:49:55 +1000</lastBuildDate>
    
	<atom:link href="http://example.org/createwf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a Workflow Instance</title>
      <link>http://example.org/createwf/createwf/</link>
      <pubDate>Sun, 27 Oct 2019 17:01:15 +1000</pubDate>
      
      <guid>http://example.org/createwf/createwf/</guid>
      <description>Workflow Instances A Workflow instance (also known as a process instance) is a specific instance of a process. Each instance has its own variables and its own lifecycle.
Create a Workflow Instance Creating and starting a workflow is a single operation:
 import { ZBClient } from &amp;#39;zeebe-node&amp;#39; import type { CreateWorkflowInstanceResponse } from &amp;#39;zeebe-node&amp;#39; // TS 3.8+  const zbc = new ZBClient() async function startWorkflowInstance(bpmnProcessId: string, initialVariables = {}): Promise&amp;lt;ZB.</description>
    </item>
    
    <item>
      <title>Type-safe Workflow Instances</title>
      <link>http://example.org/createwf/typesafe/</link>
      <pubDate>Sun, 27 Oct 2019 17:01:15 +1000</pubDate>
      
      <guid>http://example.org/createwf/typesafe/</guid>
      <description>Both the createWorkflowInstance and createWorkflowInstanceWithResult methods of the ZBClient have parameterised types, also known as generic types. These can provide a degree of type-checking and intellisense for the variables payload while coding.
By default they are set to any, so you can ignore them and the variables in and out of these functions can be anything.
Both createWorkflowInstance and createWorkflowInstanceWithResult take in the initial variable payload. This an arbitrarily shaped object that represents something in the business domain of your application.</description>
    </item>
    
  </channel>
</rss>