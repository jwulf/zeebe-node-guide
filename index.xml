<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zeebe Node.js Client Guide</title>
    <link>http://example.org/</link>
    <description>Recent content on Zeebe Node.js Client Guide</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2019 01:44:25 +1000</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Zeebe Node</title>
      <link>http://example.org/introduction/zeebe-node/</link>
      <pubDate>Tue, 05 Nov 2019 01:52:19 +1000</pubDate>
      
      <guid>http://example.org/introduction/zeebe-node/</guid>
      <description>The zeebe-node npm package is an open-source library for creating Node.js Zeebe client applications.
It was developed internally at an early-adopter of Zeebe - Credit Sense in Australia - by Josh Wulf. Credit Sense contributed it to the community by making it open-source, and it has gone on to become a popular way to write Zeebe applications.
It is written in TypeScript, and can be used with TypeScript or JavaScript.</description>
    </item>
    
    <item>
      <title>Install</title>
      <link>http://example.org/installation/install/install/</link>
      <pubDate>Thu, 07 Nov 2019 01:44:25 +1000</pubDate>
      
      <guid>http://example.org/installation/install/install/</guid>
      <description> The Zeebe Node client is available via npm.
Add to an existing project  npm i zeebe-node    Create a new Node.js project  mkdir myproject cd myproject npm init -y npm i zeebe-node    Make it a TypeScript project  npm i -g typescript tsc --init    </description>
    </item>
    
    <item>
      <title>Prerequisites</title>
      <link>http://example.org/introduction/prerequisites/</link>
      <pubDate>Wed, 06 Nov 2019 21:52:52 +1000</pubDate>
      
      <guid>http://example.org/introduction/prerequisites/</guid>
      <description>Intended Audience This guide is intended for Node.js developers who want to develop Zeebe client applications in JavaScript or TypeScript.
Familiarity with ES6 JavaScript or the TypeScript programming language, Node.js, and a working development environment are assumed.
Configuring your TypeScript transpilation is out of scope. For that, consult the TypeScript documentation.
What this guide covers This guide walks you through using the JavaScript client for Zeebe, giving you the practical steps to write a fully-fledged Zeebe client application using either ES6 JavaScript or TypeScript.</description>
    </item>
    
    <item>
      <title>Connection to the Zeebe broker</title>
      <link>http://example.org/zbclient/quickstart/</link>
      <pubDate>Mon, 28 Oct 2019 16:59:15 +1000</pubDate>
      
      <guid>http://example.org/zbclient/quickstart/</guid>
      <description>Prerequisites  Node.js / npm A Zeebe broker running locally (refer to the broker documentation).  Import the Zeebe Node library Create an index.js file (or index.ts for TypeScript).
Edit the file, and import the Zeebe Node library:
 import { ZBClient } from &amp;#39;zeebe-node&amp;#39;   const { ZBClient } = require(&amp;#39;zeebe-node&amp;#39;)     Create a ZBClient  import { ZBClient } from &amp;#39;zeebe-node&amp;#39; const zbc = new ZBClient()   const { ZBClient } = require(&amp;#39;zeebe-node&amp;#39;) const zbc = new ZBClient()     This establishes a connection to a Zeebe broker running on localhost:26500.</description>
    </item>
    
    <item>
      <title>Zeebe Node Quickstart</title>
      <link>http://example.org/quickstart/quickstart/</link>
      <pubDate>Mon, 28 Oct 2019 16:59:15 +1000</pubDate>
      
      <guid>http://example.org/quickstart/quickstart/</guid>
      <description>Prerequisites  Node.js / npm A Zeebe broker running locally (refer to the broker documentation).  Import the Zeebe Node library Create an index.js file (or index.ts for TypeScript).
Edit the file, and import the Zeebe Node library:
 import { ZBClient } from &amp;#39;zeebe-node&amp;#39;   const { ZBClient } = require(&amp;#39;zeebe-node&amp;#39;)     Create a ZBClient  import { ZBClient } from &amp;#39;zeebe-node&amp;#39; const zbc = new ZBClient()   const { ZBClient } = require(&amp;#39;zeebe-node&amp;#39;) const zbc = new ZBClient()     This establishes a connection to a Zeebe broker running on localhost:26500.</description>
    </item>
    
    <item>
      <title>Zeebe client applications</title>
      <link>http://example.org/introduction/not-rest/</link>
      <pubDate>Mon, 28 Oct 2019 16:59:15 +1000</pubDate>
      
      <guid>http://example.org/introduction/not-rest/</guid>
      <description>Zeebe is a highly-scalable, cloud-native microservices orchestration engine that uses BPMN to orchestrate microservices.
Polling model Zeebe clients communicate with a Zeebe broker cluster through a gateway. Communication between the JavaScript client code and the gateway is over gRPC. That means that your client applications poll the gateway for available tasks. The Zeebe broker does not invoke your microservices over REST. If you come from a REST architecture background, or have an existing REST microservices architecture that you want to orchestrate, you should take the time to understand the Zeebe model as it is, before trying to figure out how to use it with RESTful services.</description>
    </item>
    
  </channel>
</rss>